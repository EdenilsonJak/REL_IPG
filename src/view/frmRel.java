/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.ConnectionFactory;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.Gerador;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Edenilson
 */
public class frmRel extends javax.swing.JFrame {

    /**
     * Creates new form frmRel
     */
    public frmRel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Internação");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(158, 158, 158)
                .addComponent(jButton1)
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(127, 127, 127))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Connection conn = ConnectionFactory.getConnection();
        PreparedStatement stmt = null;
        ResultSet rs = null;
        try {
            stmt = conn.prepareStatement("Select"
                    + " DATE(arqatend.datatend) AS DATA_INTERNACAO,"
                    + " arqint.codlei As LEITO,"
                    + " arqatend.numatend As ATENDIMENTO,"
                    + " cadpac.codpac As PRONTUARIO,"
                    + " cadpac.nomepac As PACIENTE,"
                    + " cadpac.sexo As SEXO,"
                    + " tabppadr.codsppadr As CODIGO_PROCEDIMENTO,"
                    + " tabppadr.descrsp As PROCEDIMENTO,"
                    + " tabppadr.qtdmax As DIAS_SUS,"
                    + " DATE (NOW()) - DATE(arqatend.datatend) AS DIAS_INTERNADOS,"
                    + " cadprest.nomeprest As MEDICO_RESPONSAVEL,"
                    + " cadcc.codcc,"
                    + " cadcc.nomecc"
                    + " From"
                    + " arqint Inner Join"
                    + " arqatend On arqint.numatend = arqatend.numatend Inner Join"
                    + " cadpac On arqatend.codpac = cadpac.codpac Inner Join"
                    + " tabppadr On tabppadr.codsppadr = arqatend.procprin Inner Join"
                    + " cadprest On arqatend.codprest = cadprest.codprest Inner Join"
                    + " cadlei On arqint.codlei = cadlei.codlei Inner Join"
                    + " cadaco On cadlei.codaco = cadaco.codaco Inner Join"
                    + " cadcc On cadaco.codcc = cadcc.codcc"
                    + " Where"
                    + " arqint.posicao = 'I' And"
                    + " tabppadr.codtbppadr = '03'"
                    + " Order By"
                    + " cadcc.nomecc,"
                    + " 10 Desc");

            rs = stmt.executeQuery();
            /*if (rs.next()) {
                String nome = rs.getString("nomepac");
                System.out.println("nome" + nome);
            }*/

        } catch (SQLException ex) {
            Logger.getLogger(frmRel.class.getName()).log(Level.SEVERE, null, ex);
        }
        //String src = "Rel_Atendimento_wareline.jasper";
        InputStream logo = null;
        
        try {
                logo = new FileInputStream(new File("relatorios//imgs//logo.jpeg"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Gerador.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        InputStream src = null;
            try {
                src = new FileInputStream(new File("relatorios//Rel_Atendimento_wareline.jasper"));
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Gerador.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        JRResultSetDataSource resultSetDataSource = new JRResultSetDataSource(rs);
        JasperPrint jasperPrint = null;
        try {
            HashMap parameters = new HashMap();
            parameters.put("logo", logo);

            jasperPrint = JasperFillManager.fillReport(src, parameters, resultSetDataSource);
            JasperExportManager.exportReportToPdfFile(jasperPrint, "relatorios/internacao_.pdf");
            
        } catch (JRException ex) {
            System.out.println("Error: " + ex);
        }

        JasperViewer view = new JasperViewer(jasperPrint, false);
        view.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmRel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmRel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmRel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmRel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmRel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    // End of variables declaration//GEN-END:variables

}
